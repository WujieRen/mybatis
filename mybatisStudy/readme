MyBatis
    - 是做什么的？
        MyBatis是一款优秀的持久层框架，它支持定制化SQL、存储过程以及原生高级映射。MyBatis避免了几乎所有的JDBC代码和手动设置参数以及获取结果集。
        MyBatis可以使用简单的XML或注解来配置和映射原生信息，将接口和Java的POJOs(Plain Old Java Objects,普通Java对象)映射成数据库中的记录。
        (引自：http://www.mybatis.org/mybatis-3/zh/index.html)
    - 环境配置
        1. http://www.mybatis.org/mybatis-3/zh/configuration.html#environments
        2. 所有需要配置.xml的地方默认就在/resources/下，直接相对于resources下的路径即可。
    - simple demo: insert data
        遇到错误；
            1.错误略，主要原因是在执行session.CRUD()时的第一个参数是XXXMapper.xml中的namespace.id
            2.### Error updating database.  Cause: java.sql.SQLException: The server time zone value 'ÖÐ¹ú±ê×¼Ê±¼ä' is unrecognized or represents more than one time zone.
              ### Cause: java.sql.SQLException: The server time zone value 'ÖÐ¹ú±ê×¼Ê±¼ä' is unrecognized or represents more than one time zone. Y
              解决：
                jdbc:mysql://localhost:3306/testmybatis?serverTimezone=UTC
              reference：
                https://blog.csdn.net/yefengzhichen/article/details/51834511
    - 抽象MyBatiUtils工具类 & 核心类
        抽象要结合MyBatis和心类的说明，这样才能更好地理解。
            '''
                理解我们目前已经讨论过的不同作用域和生命周期类是至关重要的，因为错误的使用会导致非常严重的并发问题。

                ① SqlSessionFactoryBuilder
                    这个类可以被实例化、使用和丢弃，一旦创建了 SqlSessionFactory，就不再需要它了。因此 SqlSessionFactoryBuilder 实例的最佳作用域是方法作用域（也就是局部方法变量）。你可以重用 SqlSessionFactoryBuilder 来创建多个 SqlSessionFactory 实例，但是最好还是不要让其一直存在以保证所有的 XML 解析资源开放给更重要的事情。
                ② SqlSessionFactory
                 SqlSessionFactory 一旦被创建就应该在应用的运行期间一直存在，没有任何理由对它进行清除或重建。使用 SqlSessionFactory 的最佳实践是在应用运行期间不要重复创建多次，多次重建 SqlSessionFactory 被视为一种代码“坏味道（bad smell）”。因此 SqlSessionFactory 的最佳作用域是应用作用域。有很多方法可以做到，最简单的就是使用单例模式或者静态单例模式。
                 ③ SqlSession

                   每个线程都应该有它自己的 SqlSession 实例。SqlSession 的实例不是线程安全的，因此是不能被共享的，所以它的最佳的作用域是请求或方法作用域。绝对不能将 SqlSession 实例的引用放在一个类的静态域，甚至一个类的实例变量也不行。也绝不能将 SqlSession 实例的引用放在任何类型的管理作用域中，比如 Servlet 架构中的 HttpSession。如果你现在正在使用一种 Web 框架，要考虑 SqlSession 放在一个和 HTTP 请求对象相似的作用域中。换句话说，每次收到的 HTTP 请求，就可以打开一个 SqlSession，返回一个响应，就关闭它。这个关闭操作是很重要的，你应该把这个关闭操作放到 finally 块中以确保每次都能执行关闭。
            '''
            ——引自官方文档
        reference：
            http://www.mybatis.org/mybatis-3/zh/getting-started.html_作用域（Scope）和生命周期
    - 和MySQl、Hibernate对比有什么优缺点？
    - 小插曲：建造者模式、工厂模式
    - properties元素使用
        两种方式:
            ①
                <properties>
                    <property name="dirver" value="${driver}"/>
                    ...
                </properties>
            ②
                <properties resource="jdbc.properties" />
    - TypeAliases属性使用
        <typeAliases>
            <typeAlias type="com.mybatis.model.User" alias="User" />
        </typeAliases>
        注意配置属性时的顺序。
        ![](/img/MyBatis配置顺序.png)
    - 增删改查
    - 分页查询
        $ 的使用
        log4j的使用
    - package元素的使用

